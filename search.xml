<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>一起互窜博客吧</title>
    <url>/2020/03/17/talk2/</url>
    <content><![CDATA[<p><strong>交换友链请先添加本站为友链</strong></p>
<pre><code>本站名称: sjhv的杂货店
本站网址: https://www.sjhv.top/</code></pre><p><strong>在留言板留下贵站的地址和名称,小博主确认后会立即添加</strong><br><strong>欢迎回访互窜</strong></p>
<a id="more"></a>
<p>链接更新或者失效及时留言噢,博主会实时更新</p>
]]></content>
      <categories>
        <category>话不投机半句多</category>
      </categories>
  </entry>
  <entry>
    <title>hexo高级(博客收录到百度)</title>
    <url>/2020/03/17/hexo2/</url>
    <content><![CDATA[<p>我们写博客的原因,一方面是写下我们的生活日志,分享我们的学习等等.另一方面,就是希望更多人能从自己博客中获取有用的东西,全民共享.<br>目前为止,我们的博客都是在百度上搜索不到的,所以我们需要让百度收录我们的博客.</p>
<a id="more"></a>

<p>这里我引用一篇知乎文章(好记性不如赖知乎,今日状态不佳,就不码字了,作幅画给观众老爷吧 &gt;.&lt; ),上面的方法很详细.有需要的小伙伴可以参考参考——–<a href="https://zhuanlan.zhihu.com/p/111773896" target="_blank" rel="noopener">收录博客</a>.</p>
<p><img src="https://img-blog.csdnimg.cn/20200317134459376.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>Vue学习篇(指令篇)</title>
    <url>/2020/03/17/vue2/</url>
    <content><![CDATA[<p><strong>Tip</strong>:在vue的前期学习中,我们还暂时用不到脚手架,所以我们才开始会从外部引入vue的方式来练习.下面我就来介绍一下vue的常用指令.</p>
<a id="more"></a>
<p>在<a href="https://cn.vuejs.org/v2/api/#v-text" target="_blank" rel="noopener">vue官网</a>中,给我们提供了全套的学习资料.我们可以作为学习的参考.</p>
<p><strong>1.引入vue</strong><br>    我们这里以Html文件来讲,从外部引入vue.<br>    在body体中,引入以下代码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.6.10&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 没有用脚手架之前 </span><br><span class="line">            &#x2F;&#x2F; 1.引入Vue数据库</span><br><span class="line">            &#x2F;&#x2F; 2.挂载我们的组件</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el:&quot;#app&quot;,</span><br><span class="line"></span><br><span class="line">            data()&#123;</span><br><span class="line">                return&#123;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<br/>

<p><strong>2.指令练习</strong><br>这里简单介绍一部分指令,其他的指令大同小异,可在vue官网参考</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;h1&gt;&#123;&#123;demo1&#125;&#125;&lt;&#x2F;h1&gt;&#123;&#123;demo2&#125;&#125;</span><br><span class="line">        &lt;!-- &#123;&#123;&#125;&#125; 插值符号  主要用于插入我们想要的数组 等等 --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p&gt;&#123;&#123;demo3.split(&quot;&quot;).reverse().join()&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;!-- 在插值符号中  是可以写js逻辑代码的 --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p v-text&#x3D;&quot;demo4&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p v-html&#x3D;&quot;demo5&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;!-- text中 只能解析数据  html中还可以解析标签 --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p v-show&#x3D;&quot;demo6&quot;&gt;&#123;&#123;demo2&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;!-- show的本质就相当于是display:none  or other  --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p v-if&#x3D;&quot;demo7&#x3D;&#x3D;&#x3D;&#39;m&#39;&quot;&gt;if中的判断哦&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p v-else-if&#x3D;&quot;demo7 &#x3D;&#x3D;&#x3D; &#39;v&#39;&quot;&gt;else中的判断哦&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p v-else&#x3D;&quot;&quot;&gt;else中的判断哦&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;!-- 在if中 本质也是true与false的判断 --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li v-for&#x3D;&quot;(value,key,index) in demo8&quot;&gt; &#123;&#123;value&#125;&#125; &#123;&#123;key&#125;&#125; &#123;&#123;index&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;br&#x2F;&gt;</span><br><span class="line">            &lt;li v-for&#x3D;&quot;(value,index) in demo9&quot;&gt;&#123;&#123;index&#125;&#125; &#123;&#123;value&#125;&#125;&lt;&#x2F;li&gt;</span><br><span class="line">            &lt;!-- for in 中主要是遍历的作用  遍历键值对 以及下标 或者是数组当中的值 下标 --&gt;</span><br><span class="line">        &lt;&#x2F;ul&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.6.10&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        &#x2F;&#x2F; 没有用脚手架之前 </span><br><span class="line">            &#x2F;&#x2F; 1.引入Vue数据库</span><br><span class="line">            &#x2F;&#x2F; 2.挂载我们的组件</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el:&quot;#app&quot;,</span><br><span class="line"></span><br><span class="line">            data()&#123;</span><br><span class="line">                return&#123;</span><br><span class="line">                    &#x2F;&#x2F; vue里面的return是&#123; &#125;   在react里面是()</span><br><span class="line">                    demo1:&quot;fighting的一天&quot;,</span><br><span class="line">                    demo2:&quot;我死于昨天,重生于今天&quot;,</span><br><span class="line">                    demo3:&quot;1234&quot;,</span><br><span class="line">                    demo4:&quot;新的内容&quot;,</span><br><span class="line">                    demo5:&quot;&lt;h3&gt;旧的内容&lt;&#x2F;h3&gt;&quot;,</span><br><span class="line">                    demo6:false,</span><br><span class="line">                    demo7:&quot;m&quot;,</span><br><span class="line">                    demo8:&#123;</span><br><span class="line">                        name:&quot;sjh&quot;,</span><br><span class="line">                        sex:&quot;男&quot;,</span><br><span class="line">                        age:&quot;18&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    demo9:[&quot;小啊&quot;,&quot;小白&quot;,&quot;小黑&quot;]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>
<br/>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    &lt;style&gt;</span><br><span class="line">        .css&#123;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">        &#125;</span><br><span class="line">        .sjh&#123;</span><br><span class="line">            background-color: grey;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;&#x2F;style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123;demo1&#125;&#125;&lt;&#x2F;h1&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p v-text&#x3D;&quot;num&quot;&gt;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p&gt;&#123;&#123;num&#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;button v-on:click&#x3D;&#39;onAdd&#39;&gt;+&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button v-on:click&#x3D;&quot;onReduce&quot;&gt;-&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;button @click.once&#x3D;&quot;onAdd&quot;&gt;加&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;!-- once就是只绑定一次 之后就会被销毁 --&gt;</span><br><span class="line">        &lt;!-- 这里要注意  有时候直接用插值符号 是不会发生改变的 要用到text v-on的简写@ --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;button @keyup.13&#x3D;&quot;onAdd&quot;&gt;点击&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;!-- 这里要是用到键盘 就可以写键码  13是enter的键码--&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;form action&#x3D;&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;?&quot; @submit.stop.prevent&gt;</span><br><span class="line">            &lt;button&gt;点击跳转&lt;&#x2F;button&gt;</span><br><span class="line">        &lt;&#x2F;form&gt;</span><br><span class="line">        &lt;!-- @submit.stop.prevent 是禁止默认事件 和 Js中的 preventDefault() 效果一样 --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;p v-bind:class&#x3D;&quot;demo3&quot;&gt;demo3&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;p :class&#x3D;&quot;[&#39;css&#39;]&quot;&gt;class类名绑定&lt;&#x2F;p&gt;  </span><br><span class="line">        </span><br><span class="line">        &lt;p :style&#x3D;&quot;demo4&quot;&gt;我来了&lt;&#x2F;p&gt;</span><br><span class="line">        &lt;div :style&#x3D;&quot;&#123;width:&#39;50px&#39;,height:&#39;50px&#39;,backgroundColor:&#39;orange&#39;,fontSize&#125;&quot;&gt;999&lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.bootcss.com&#x2F;vue&#x2F;2.6.10&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line"></span><br><span class="line">        new Vue(&#123;</span><br><span class="line">            el:&quot;#app&quot;,</span><br><span class="line"></span><br><span class="line">            data()&#123;</span><br><span class="line">                return&#123;</span><br><span class="line">                    demo1:&quot;指令2的复习&quot;,</span><br><span class="line">                    num:0,</span><br><span class="line">                    demo3:&quot;sjh&quot;,</span><br><span class="line">                    demo4:&quot;background-color:red&quot;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            methods:&#123;</span><br><span class="line">                onAdd()&#123;</span><br><span class="line">                    this.num++</span><br><span class="line">                    console.log(this.num)</span><br><span class="line">                &#125;,</span><br><span class="line">                onReduce()&#123;</span><br><span class="line">                    this.num--</span><br><span class="line">                    console.log(this.num)</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<p><strong>多次练习,熟悉指令</strong><br>注意颈椎和头发<br>vue指令就简单介绍到这里啦</p>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
  </entry>
  <entry>
    <title>Vue学习篇(介绍)</title>
    <url>/2020/03/16/vue1/</url>
    <content><![CDATA[<p>好啦,新搭建的博客功能也基本上陆续上线了,在这之后博主不仅会时常分享小故事,还是把自己学习的总结撰写成文章,方便各位看官参考.可能会有不足或者错误.希望朋友们能多多指点.</p>
<p>前端学习到后阶段,必不可少的会学习框架.目前市场上的框架大多都是Vue,React,angular这三种.小博主学习了前两种.</p>
<a id="more"></a>
<p>Vue主要用于小程序等等的开发,非常主流而且方便.而已也有很多的插件方便我们开发网站或者小程序,例如 <a href="https://mint-ui.github.io/#!/zh-cn" target="_blank" rel="noopener">minUI</a> ,<a href="https://element.eleme.cn/#/zh-CN" target="_blank" rel="noopener">elementUI</a> 等等<br>学习Vue也非常方便,这里提供一个 <a href="https://cn.vuejs.org/v2/api/#v-once" target="_blank" rel="noopener">秘籍</a></p>
<p>React我会在React篇重点介绍,这里就简单带过,React主要用于大型开发,而且在小型公司里用的不多.</p>
<p>框架的学习任重而道远,注意颈椎和头发噢</p>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
  </entry>
  <entry>
    <title>hexo进阶(功能添加)</title>
    <url>/2020/03/16/hexo1/</url>
    <content><![CDATA[<p><strong>这篇文章时建立在hexo博客已经搭建好的基础上,我们完善我们的博客功能</strong></p>
<p><strong>1.博客评论功能</strong><br>这里操作比较简单,我就直接引用CSDN上的一篇帖子 :<a href="https://blog.csdn.net/qq_35117024/article/details/81391459" target="_blank" rel="noopener">评论功能</a><br>里面很详细的步骤. 提示一下,在安装的时候,填的是你的域名地址和博客名字哦.比如我的是(sjhv的杂货店) .  安装后的网站名称就填 sjhv的杂货店</p>
<a id="more"></a>
<p><strong>2.搜索功能</strong><br>搜索功能安装也非常的方便,hexo提供了内置搜索插件.直接安装之后修改文件信息就好了,看下面过程.</p>
<p>(1)在站点目录下执行指令 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p>(2)修改站点目录下的_config.yml 文件，在最底部添加如下配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure>
<p>(3)修改主题目录下的_config.yml 文件,<br>ctrl+F搜索local_search.<strong>修改enable为true</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line">  trigger: auto</span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line">  top_n_per_article: 1</span><br></pre></td></tr></table></figure>
<p>(4)执行指令 –&gt;清除缓存,部署上线.就可以看到博客中有搜索功能啦</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>
<p><strong>3.最爱的打赏功能</strong><br>这里以hexo中的next模板为例<br>在主题文件夹中找到_config.yml文件<br>ctrl+F搜索reward.<br><strong>把reward_setting中的enable改为true</strong><br>comment根据喜好改<br><strong>reward下面就可以添加你的二维码图片啦</strong><br>部署上线,本地查看  就可以看到每篇文章下面有打赏噢.<br><img src="https://img-blog.csdnimg.cn/20200316152847456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>本篇文章就介绍到这里.有更多实用功能,博主实时更新.</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>前端学习心得</title>
    <url>/2020/03/16/talk1/</url>
    <content><![CDATA[<p>时间不长也不短,差不多半年的时间,我终于还是触碰到了程序员的世界,真的苦了孩子了.一学不要紧,杠上了真要命.</p>
<p>程序员进阶过程.<br>初级–&gt;这段代码哪里错了呀,什么编译器 !<br>高级–&gt;这代码居然能运行!!!<br>成仙–&gt;这代码谁写的,注释,组件化都没有?怎么学的……噢,原来是我写的!</p>
<a id="more"></a>
<p>有朋友问我前端的具体学习过程.咱们就上图吧<br><img src="https://img-blog.csdnimg.cn/20200316113908120.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>上面内容含搞笑元素.其实计算机学起来都需要付出的,大牛都是靠码量练出来的.才开始多借鉴,参考CSDN,等IT社区,对自己的学习很有帮助.  在简书上也有很多的方法.当你沉迷进来后,你会觉得写东西很有意思. </p>
<p>愿你也能快点找到自己的快乐.</p>
]]></content>
      <categories>
        <category>话不投机半句多</category>
      </categories>
  </entry>
  <entry>
    <title>深夜故事第一番</title>
    <url>/2020/03/15/story1/</url>
    <content><![CDATA[<p>在大学学习一段时间后,发现自己并不喜欢自己的专业,虽然同为计算机.但我更爱设计,辗转反侧之后决定步入Web前端.断断续续半年的学习,终于熬了出来.</p>
<p>做计算机的总是和熬夜离不开,在深夜总是人多愁善感的时候.某一天萌生了搭建博客来记录我的生活,便一步一步踏进博客设计中.</p>
<a id="more"></a>
<p>我觉得写博文真的是一件非常快乐的事情，虽然可能没有听众，但是把自己知道的，摸索出来的东西写下来，分享出来，并不单单是想要别人来看，更有一种记录生活的感觉。</p>
<p>选择自己搭建个人博客，势必会走上一条曲折的道路。自己跟着教程一步步走下来，最后得到的，却也许并不是原先期望的那样。不喜欢折腾的人也许就会将就着用下去，但我倔强地坚持要得到我想要的。自己不断寻找问题，解决问题，那么在解决的那一刻真的是浑身舒畅。但是然后呢？我选择把整个过程或是解决方案记录下来，放在博客里。每次折腾势必会看到，告诉我自己已经解决了那么多的困难，这一次也一定能成功。它能够激励我不断走下去。</p>
<p>人们喜欢拍照，录像，通过照片与视频将生活记录下来。而我觉得，通过文字记录生活更是一个不错的选择。况且上传到博客上，说不定哪天就有人看到，留下自己的看法，或者能够一起讨论，似乎也很美好。</p>
<p>我喜欢通过不一样的方式来让别人了解我,我喜欢听故事,也喜欢讲故事,故事里有喜有愁,有悲有感.</p>
<p>我的深夜番从今晚就开始了,故事里的事总会有有缘人来品味.本站没有访问记录,更没有评论. </p>
<p>看完故事,你还是你,我还是我. </p>
<p>我爱深夜贩卖故事,我们素不相识</p>
]]></content>
      <categories>
        <category>我在深夜贩卖故事</category>
      </categories>
  </entry>
  <entry>
    <title>hexo+github博客搭建</title>
    <url>/2020/03/15/github_hexo/</url>
    <content><![CDATA[<p><strong>1.搭建环境配置</strong><br>Node.js的安装和准备<br>Git的安装和准备<br>gitHub账户的配置</p>
<p><strong>2.安装Hexo</strong><br>例如我是在 E:\hexo文件夹弄</p>
<a id="more"></a>
<p>进入该目录 npm install hexo-cli-g<br><img src="https://img-blog.csdnimg.cn/20200315131750171.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>有个WARN,但不影响我们操作<br>接着输入 npm install hexo –save<br>在命令行中输入 hexo-v 看是否安装好了<br><img src="https://img-blog.csdnimg.cn/2020031513193188.png" alt="在这里插入图片描述"></p>
<p><strong>3.初始化hexo</strong></p>
<p>输入 hexo init<br>在输入 npm install<br>之后npm将会自动安装你需要的组件，只需要等待</p>
<p>输入 hexo g<br>输入 hexo s<br>这里默认你已经配置好了github仓库</p>
<p>在浏览器中打开<a href="http://localhost:4000/，你将会看到" target="_blank" rel="noopener">http://localhost:4000/，你将会看到</a><br><img src="https://img-blog.csdnimg.cn/20200315132159268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>到目前为止，Hexo在本地的配置已经全都结束了</p>
<p><strong>4.配置git个人信息</strong></p>
<p>如果你之前已经配置好git个人信息，请跳过这一个步骤<br>设置Git的user name和email<br>生成密钥</p>
<p><strong>5.配置Deployment</strong><br>在站点文件下找到_config.yml文件,ctrl+f搜索deploy<br>配置deploy如下<br>deploy:<br>    type: git<br>    repo: github仓库地址<br>    branch: master</p>
<p>注意需要安装一个扩展：<br>npm install hexo-deployer-git –save<br>如果没有执行者行命令，将会提醒<br>deloyer not found:git</p>
<p>执行hexo new &lt;模板&gt; &lt;文章名&gt;<br>其中&lt;模板&gt;在scaffolds中，默认情况下有三个模板post(新建文章)、draft(新建草稿)、page(新建页面)  —&gt;  通常情况下使用 hexo new post 文章名</p>
<p>这时候在我的 电脑的目录下 F:\hexo\source\ _posts 将会看到  article title.md 文件用MarDown编辑器打开就可以编辑文章了。</p>
<p>运行生成、部署命令: hexo d -g<br>运行博客 hexo s<br>就可以看到你写的文章已经部署在博客上了</p>
<p>如果出现下面这样的错误，<br>Permission denied (publickey).</p>
<p>fatal: Could not read from remote repository.</p>
<p>Please make sure you have the correct access rights</p>
<p>and the repository exists.<br>则是因为没有设置好public key所致</p>
<p><strong>6.主题配置</strong><br>这里我选择使用hexo中的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">next模板</a>.<br>克隆自己喜欢的主题,<br>运行 git clone 主题仓库地址<br>在hexo中克隆好之后(最好选择克隆 方便后期更新),打开站点目录中的_config.yml， 找到 theme 字段，并将其值更改为 主题文件名(克隆下来的文件夹名).<br>到此，NexT 主题安装完成。下一步我们将验证主题是否正确启用。在切换主题之后、验证之前， 我们最好使用 hexo clean 来清除 Hexo 的缓存。</p>
<p><strong>7.验证主题</strong><br>输入 hexo s –debug<br>在本地localhost:4000 中就可以看配置好的主题了</p>
<p>下一步我们将要更改一些主题的设定，包括个性化以及集成第三方服务。<br>本章就不介绍了,因为这里偏个人爱好.在CSDN上有很多参考.</p>
<p>本节就介绍到这里啦</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>hexo绑定域名</title>
    <url>/2020/03/15/Custom/</url>
    <content><![CDATA[<p><strong>这篇文章时建立在个人博客已经部署好了的情况下,想自定义域名访问自己的博客,接下来我介绍一下过程</strong></p>
<p><strong>1.购买域名并实名认证</strong><br>作为一个网络爱好者,怎么能没有自己的域名呢.域名一年也不贵,几十块钱.我是在<a href="https://www.aliyun.com" target="_blank" rel="noopener">阿里云</a>购买并且实名的.看缘分,实名可能一会也可能几天.</p>
<a id="more"></a>
<p><strong>2.域名解析</strong><br><img src="https://img-blog.csdnimg.cn/20200315124931126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3采用CNAME(个人意愿选择)</strong><br>主机记录我填的是www  ,  (还有@,*这另外两种,这里不详细介绍).<br>CNAME记录的记录值设置成域名，如果绑定coding,就是coding部署静态网站成功后提供的访问地址,github同理<br>TIL默认10分钟<br>解析线路默认<br><img src="https://img-blog.csdnimg.cn/20200315125519686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>解析成功后就是这样</p>
<p><strong>4.绑定域名</strong><br>(1)在coding上绑定域名<br>进入项目点击左边 构建与部署–&gt;静态网站,右上角点击设置,下拉到最下面就是域名绑定.<br><img src="https://img-blog.csdnimg.cn/2020031512582991.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>(2)在github上绑定域名 </p>
<p> 点击 setting .你的可能是英文网页的(果断选择谷歌翻译 或者找到GitHub Pages   —&gt;Custom domain就是绑定域名)<br><img src="https://img-blog.csdnimg.cn/20200315130059926.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>域名绑定就介绍到这里啦</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>hexo部署优化(hexo+coding+github)</title>
    <url>/2020/03/15/hexo-geater/</url>
    <content><![CDATA[<p><strong>这篇文章时建立在hexo已经成功部署在github上的优化</strong></p>
<p>为了解决个人博客在github上访问慢的问题,我尝试在coding上部署了我的博客,果然国内的访问快多了.接下来我就大概说说我的部署过程</p>
<p><strong>1.注册coding</strong><br>使用之前，需要在<a href="https://coding.net/" target="_blank" rel="noopener">coding</a>注册账号，登陆，体验个人版就可以了，免费。团队名和登录地址最好一样. </p>
<a id="more"></a>
<p><strong>2.创建项目</strong><br><a href="https://sjhv.coding.net/user/projects/create" target="_blank" rel="noopener">项目创建</a><br><img src="https://img-blog.csdnimg.cn/20200315114241509.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>或者<img src="https://img-blog.csdnimg.cn/2020031512193320.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>项目名称：与你的用户名相同，用户名就是你的团队名 .项目地址就是你的登录地址(一开始就应该有).看意愿是否公开源代码.项目描述可有可无,最后点击创建项目.</p>
<p><strong>3.添加SSH Key</strong><br>由于之前部署到GitHub的时候，就创建了SSH Key了，这里就不需要重复创建了，直接使用之前的就可以了。没有创建的先去创建(网上一搜一堆)<br><img src="https://img-blog.csdnimg.cn/20200315114854686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>大概创建方法就是这样.<br>有了公钥之后,点击右上角的个人账号 —&gt; 个人设置 —&gt; SSH公钥 —&gt; 新增公钥。<br>默认的公钥路径为C/Users(用户)/用户名/.ssh，在.ssh文件中公钥文件为id_rsa.pub，复制内容添加进去就可以了。添加完成后以后上传代码的时候，就不再需要输入账号密码了。</p>
<p><strong>4.修改_config.yml文件</strong><br>    在站点配置文件下找到_config.yml文件(不是你主题里面的).<br>    <img src="https://img-blog.csdnimg.cn/20200315115607283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>    ctrl+F搜索deploy .我同时挂在了github和coding上,所以这里的repo会有两个路径. 把你的coding项目路径加进去(是SSH地址 不是HTTPS地址!!!!!)<br>    <img src="https://img-blog.csdnimg.cn/20200315120140761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>5.发布内容</strong><br>这里默认你的hexo主题时配置好了的. 执行 hexo clean 清除缓存 hexo d -g 生成部署.<br><img src="https://img-blog.csdnimg.cn/20200315120505982.png" alt="在这里插入图片描述"></p>
<p>这样你的coding就部署好了,你点击你的仓库可以看看你的代码</p>
<p><strong>6,开启静态网站</strong><br><img src="https://img-blog.csdnimg.cn/20200315120729415.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200315122148920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200315122204750.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>之后点击立即部署.成功后,Coding会提供给我们一个访问地址.这样 我们在coding上就部署好了</p>
<p><strong>7.添加域名</strong><br><img src="https://img-blog.csdnimg.cn/20200315122523161.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>绑定成功后,就可以用自己的域名来访问啦.<br>可以参照本站的域名绑定,解析文章</p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>Hello everyone</title>
    <url>/2020/03/14/hello_everyoone/</url>
    <content><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20200314140003685.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<a id="more"></a>
<br/>
<center>欢迎来到我的博客主页,博主是一个刚学完前端的小透明</center>
<center>我讲个故事可别当真</center>
<center>小主读书不多,想法很大</center>
<center>希望在学校沉淀一段时间后,出去能在字节跳动工作</center>
<center>毕业季希望能实现去日本旅行的小心愿</center>
<center>去看看天空树,拜访一下明治神宫</center>
<center>希望以后能有自己的一间咖啡店</center>
<center>做自己喜欢的事情</center>
<center>生活是自己的,别沉寂.</center>
<center>希望能交到更多做web前端的伙伴</center>
<center>看下面,开始我们的故事吧</center>


<br/>
<br/>
<table>
    <tr>
        <td ><center><img src="https://img-blog.csdnimg.cn/20200314134921493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70 " width="100" align="center"> </center></td>
        <td ><center><img src="https://img-blog.csdnimg.cn/20200314135022825.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3Nha3VyYXNqaA==,size_16,color_FFFFFF,t_70" width="100" align="center"></center></td>
    </tr>
<table>


]]></content>
      <categories>
        <category>话不投机半句多</category>
      </categories>
      <tags>
        <tag>me</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
</search>
